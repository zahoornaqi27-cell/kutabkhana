// === ┌й╪к╪з╪и┘И┌║ ┌й╪з ┌И█М┘╣╪з ===
const booksData = [
    // ╪з╪▒╪п┘И ┘Ж╪з┘И┘Д
    {
        id: 1,
        title: "╪в┌п ┌й╪з ╪п╪▒█М╪з",
        author: "┘В╪▒█Г ╪з┘Д╪╣█М┘Ж ╪н█М╪п╪▒",
        language: "urdu",
        genre: "novel",
        description: "╪и╪▒╪╡╪║█М╪▒ ┌й█М ╪к┘В╪│█М┘Е ┘╛╪▒ ┘Е╪и┘Ж█М ╪┤╪з█Б┌й╪з╪▒ ┘Ж╪з┘И┘Д",
        cover: "https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?w=400&q=80",
        pdfUrl: "pdfs/urdu/aag-ka-darya.pdf",
        pages: 450,
        year: 1959,
        rating: 4.8
    },
    {
        id: 2,
        title: "╪▒╪з╪м█Б ┌п╪п┌╛",
        author: "╪╣╪и╪п╪з┘Д┘Д█Б ╪н╪│█М┘Ж",
        language: "urdu",
        genre: "novel", 
        description: "┘╛╪з┌й╪│╪к╪з┘Ж ┌й█Т ╪│█М╪з╪│█М ╪н╪з┘Д╪з╪к ┘╛╪▒ ╪╖┘Ж╪▓█М█Б ┘Ж╪з┘И┘Д",
        cover: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&q=80",
        pdfUrl: "pdfs/urdu/raja-gidh.pdf",
        pages: 320,
        year: 1963,
        rating: 4.6
    },

    // █Б┘Ж╪п█М ┘Ж╪з┘И┘Д
    {
        id: 3,
        title: "рдЧреЛрджрд╛рди",
        author: "рдкреНрд░реЗрдордЪрдВрдж",
        language: "hindi",
        genre: "novel",
        description: "рднрд╛рд░рддреАрдп рдЧреНрд░рд╛рдореАрдг рдЬреАрд╡рди рдкрд░ рдЖрдзрд╛рд░рд┐рдд рдЙрдкрдиреНрдпрд╛рд╕",
        cover: "https://images.unsplash.com/photo-1456513080510-7bf3a84b82f8?w=400&q=80",
        pdfUrl: "pdfs/hindi/godan.pdf",
        pages: 380,
        year: 1936,
        rating: 4.7
    },

    // ┘╛┘Ж╪м╪з╪и█М ┘Ж╪з┘И┘Д
    {
        id: 4, 
        title: "рдкрд┐рдВрдЬрд░",
        author: "рдЕрдореГрддрд╛ рдкреНрд░реАрддрдо",
        language: "punjabi",
        genre: "novel",
        description: "рд╡рд┐рднрд╛рдЬрди рдХреА рддреНрд░рд╛рд╕рджреА рдкрд░ рдЖрдзрд╛рд░рд┐рдд рдЙрдкрдиреНрдпрд╛рд╕",
        cover: "https://images.unsplash.com/photo-1483058712412-4245e9b90334?w=400&q=80",
        pdfUrl: "pdfs/punjabi/pinjar.pdf",
        pages: 280,
        year: 1950,
        rating: 4.5
    },

    // ╪з╪▒╪п┘И ╪┤╪з╪╣╪▒█М
    {
        id: 5,
        title: "╪п█М┘И╪з┘Ж┘Р ╪║╪з┘Д╪и",
        author: "┘Е╪▒╪▓╪з ╪║╪з┘Д╪и",
        language: "urdu", 
        genre: "poetry",
        description: "╪║╪з┘Д╪и ┌й█Т ┌й┘Д╪з┘Е ┌й╪з ┘Е┌й┘Е┘Д ╪п█М┘И╪з┘Ж",
        cover: "https://images.unsplash.com/photo-1512820790803-83ca734da794?w=400&q=80",
        pdfUrl: "pdfs/urdu/dewan-e-ghalib.pdf",
        pages: 200,
        year: 1869,
        rating: 4.9
    },

    // ╪з┘Б╪│╪з┘Ж█Т
    {
        id: 6,
        title: "╪з┘Б╪│╪з┘Ж█Т",
        author: "╪│╪╣╪з╪п╪к ╪н╪│┘Ж ┘Е┘Ж┘╣┘И",
        language: "urdu",
        genre: "short-stories",
        description: "┘Е┘Ж┘╣┘И ┌й█Т ┘Е┘Ж╪к╪о╪и ╪з┘Б╪│╪з┘Ж█Т",
        cover: "https://images.unsplash.com/photo-1589998059171-988d887df646?w=400&q=80", 
        pdfUrl: "pdfs/urdu/manto-stories.pdf",
        pages: 180,
        year: 1955,
        rating: 4.7
    },

    // ┘Е╪▓█М╪п ┌й╪к╪з╪и█М┌║ ╪┤╪з┘Е┘Д ┌й╪▒█М┌║...
];

// === ┘Б┘Ж┌й╪┤┘Ж╪▓ ===

// ┌й╪к╪з╪и█М┌║ ┌И╪│┘╛┘Д█Т ┌й╪▒█М┌║
function displayBooks(books, containerId) {
    const container = document.getElementById(containerId);
    if (!container) return;

    container.innerHTML = books.map(book => `
        <div class="book-card" data-language="${book.language}" data-genre="${book.genre}">
            <img src="${book.cover}" alt="${book.title}" class="book-cover">
            <div class="book-content">
                <h3 class="book-title">${book.title}</h3>
                <p class="book-author">${book.author}</p>
                <p class="book-description">${book.description}</p>
                <div class="book-meta">
                    <span>ЁЯУЦ ${book.pages} ╪╡┘Б╪н╪з╪к</span>
                    <span>тнР ${book.rating}</span>
                    <span>${book.year}</span>
                </div>
                <div class="book-actions">
                    <button class="read-btn" onclick="readBook('${book.pdfUrl}')">ЁЯУЦ ┘╛┌С┌╛█М┌║</button>
                    <button class="download-btn" onclick="downloadBook('${book.pdfUrl}', '${book.title}')">ЁЯУе ┌И╪з╪д┘Ж┘Д┘И┌И</button>
                </div>
            </div>
        </div>
    `).join('');
}

// ┌й╪к╪з╪и ┘╛┌С┌╛█М┌║
function readBook(pdfUrl) {
    window.open(pdfUrl, '_blank', 'width=800,height=600');
    trackEvent('book', 'read', pdfUrl);
}

// ┌й╪к╪з╪и ┌И╪з╪д┘Ж┘Д┘И┌И ┌й╪▒█М┌║
function downloadBook(pdfUrl, title) {
    const link = document.createElement('a');
    link.href = pdfUrl;
    link.download = `${title}.pdf`;
    link.click();
    trackEvent('book', 'download', title);
}

// ┌й╪к╪з╪и█М┌║ ╪к┘Д╪з╪┤ ┌й╪▒█М┌║
function searchBooks() {
    const searchTerm = document.getElementById('searchInput')?.value.toLowerCase() || 
                      document.getElementById('heroSearchInput')?.value.toLowerCase() || '';
    
    const resultsContainer = document.getElementById('searchResults');
    const resultsTitle = document.getElementById('searchResultsTitle');
    const resultsSection = document.getElementById('searchResultsSection');

    if (searchTerm.trim() === '') {
        if (resultsSection) resultsSection.style.display = 'none';
        return;
    }

    if (resultsSection) resultsSection.style.display = 'block';

    const filteredBooks = booksData.filter(book => 
        book.title.toLowerCase().includes(searchTerm) ||
        book.author.toLowerCase().includes(searchTerm) ||
        book.description.toLowerCase().includes(searchTerm) ||
        book.genre.toLowerCase().includes(searchTerm) ||
        book.language.toLowerCase().includes(searchTerm)
    );

    if (resultsTitle) {
        resultsTitle.textContent = `╪к┘Д╪з╪┤ ┌й█Т ┘Ж╪к╪з╪ж╪м (${filteredBooks.length})`;
    }

    if (resultsContainer) {
        displayBooks(filteredBooks, 'searchResults');
    }
}

// ┘Ж╪з┘И┘Д ┘Б┘Д┘╣╪▒ ┌й╪▒█М┌║
function filterNovels() {
    const languageFilter = document.getElementById('languageFilter')?.value;
    const authorFilter = document.getElementById('authorFilter')?.value;
    
    let filtered = booksData.filter(book => book.genre === 'novel');

    if (languageFilter && languageFilter !== 'all') {
        filtered = filtered.filter(book => book.language === languageFilter);
    }

    if (authorFilter && authorFilter !== 'all') {
        filtered = filtered.filter(book => book.author.toLowerCase().includes(authorFilter));
    }

    displayBooks(filtered, 'novelsGrid');
}

// ┘Ж╪з┘И┘Д ╪│┘И╪▒┘╣ ┌й╪▒█М┌║
function sortNovels() {
    const sortBy = document.getElementById('sortFilter')?.value;
    let novels = booksData.filter(book => book.genre === 'novel');

    switch(sortBy) {
        case 'popular':
            novels.sort((a, b) => b.rating - a.rating);
            break;
        case 'new':
            novels.sort((a, b) => b.year - a.year);
            break;
        case 'old':
            novels.sort((a, b) => a.year - b.year);
            break;
        case 'title':
            novels.sort((a, b) => a.title.localeCompare(b.title));
            break;
    }

    displayBooks(novels, 'novelsGrid');
}

// ╪з█М┘И┘Ж┘╣ ┘╣╪▒█М┌й┘Ж┌п
function trackEvent(category, action, label) {
    if (typeof gtag !== 'undefined') {
        gtag('event', action, {
            'event_category': category,
            'event_label': label
        });
    }
    console.log(`Event: ${category} - ${action} - ${label}`);
}

// ┌И╪▒╪з┘╛ ┌И╪з╪д┘Ж ╪│█М┘╣ ╪з┘╛
function setupDropdowns() {
    const dropdowns = document.querySelectorAll('.dropdown');
    
    dropdowns.forEach(dropdown => {
        dropdown.addEventListener('mouseenter', function() {
            this.querySelector('.dropdown-content').style.display = 'block';
        });
        
        dropdown.addEventListener('mouseleave', function() {
            this.querySelector('.dropdown-content').style.display = 'none';
        });
    });
}

// ┘╛█М╪м ┘Д┘И┌И █Б┘И┘Ж█Т ┘╛╪▒
document.addEventListener('DOMContentLoaded', function() {
    setupDropdowns();
    
    // ┘Б█М┌Ж╪▒┌И ┌й╪к╪з╪и█М┌║ ╪п┌й┌╛╪з╪ж█М┌║
    const featuredBooks = booksData.slice(0, 6);
    displayBooks(featuredBooks, 'featuredBooks');
    
    // ╪з┌п╪▒ ┘Ж╪з┘И┘Д ╪╡┘Б╪н█Б ┘╛╪▒ █Б█М┌║ ╪к┘И ┘Ж╪з┘И┘Д ┘Д┘И┌И ┌й╪▒█М┌║
    if (window.location.pathname.includes('novels')) {
        const novels = booksData.filter(book => book.genre === 'novel');
        displayBooks(novels, 'novelsGrid');
    }

    console.log('┌й╪к╪и ╪о╪з┘Ж█Б ┘И█М╪и ╪│╪з╪ж┘╣ ┘Д┘И┌И █Б┘И ┌п╪ж█М!');
});